// N.B., This file is not processed by cargo/rustc and only exists so that we
// can assert in CI that our API wrappers are complete via tooling.
//
// The function and constant definitions in this file exist to override what
// was generated by bindgen. This allows us to tweak various argument types
// generated by bindgen.
//
// The pattern for these functions is to write the old definition and the new
// definition prefixing the function name with `old_` and `new_`. For instance,
// if you want to remap tiledb_version to take unsigned values, you could do
// the following:
//
//  pub fn old_tiledb_version(major: *mut i32, minor: *mut i32, rev: *mut i32);
//  pub fn new_tiledb_version(major: *mut u32, minor: *mut u32, rev: *mut u32);

// Remapped constants

// For whatever reason, bindgen generate TILEDB_OK as u32, and the other
// error values as i32. This fixes TILEDB_OK to be i32 so we can compare
// status codes correctly.
pub const old_TILEDB_OK: u32 = 0;
pub const new_TILEDB_OK: i32 = 0;

extern "C" {

    // These two VFS ls functions are remapping their callback types to use
    // a more Rust-y approach.

    pub fn old_tiledb_vfs_ls(
        ctx: *mut tiledb_ctx_t,
        vfs: *mut tiledb_vfs_t,
        path: *const ::std::os::raw::c_char,
        callback: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *const ::std::os::raw::c_char,
                arg2: *mut ::std::os::raw::c_void,
            ) -> i32,
        >,
        data: *mut ::std::os::raw::c_void,
    ) -> capi_return_t;

    pub fn new_tiledb_vfs_ls(
        ctx: *mut tiledb_ctx_t,
        vfs: *mut tiledb_vfs_t,
        path: *const ::std::os::raw::c_char,
        callback: LSCallback,
        data: *mut ::std::os::raw::c_void,
    ) -> capi_return_t;

    pub fn old_tiledb_vfs_ls_recursive(
        ctx: *mut tiledb_ctx_t,
        vfs: *mut tiledb_vfs_t,
        path: *const ::std::os::raw::c_char,
        callback: tiledb_ls_callback_t,
        data: *mut ::std::os::raw::c_void,
    ) -> capi_return_t;

    pub fn new_tiledb_vfs_ls_recursive(
        ctx: *mut tiledb_ctx_t,
        vfs: *mut tiledb_vfs_t,
        path: *const ::std::os::raw::c_char,
        callback: LSRecursiveCallback,
        data: *mut ::std::os::raw::c_void,
    ) -> capi_return_t;
}
